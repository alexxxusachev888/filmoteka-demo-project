{"mappings":"YAAA,IAOIA,EAPEC,EAAU,mCACVC,EAAW,wCAGXC,EAAgBC,SAASC,cAAc,kBACvCC,EAAoBF,SAASC,cAAc,kBAIjD,SAASE,I,IAAkBC,EAAAC,UAAAC,OAAA,YAAAD,UAAA,GAAQA,UAAA,GAAD,EAChC,OAAOE,eAAiBC,MAAM,GAAkCC,OAA/BX,EAAS,wBAAsCW,OAAhBZ,EAAQ,UAAaY,OAALL,IAC7EM,MAAK,SAAAC,GAEJ,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,YAGvB,OAAOH,EAAKI,M,IACXC,OAAM,SAAAC,G,OAAOC,QAAQC,IAAIF,E,IAQhC,SAASG,EAAaC,GACpB,IAAMC,EAASD,EAAIE,KAAI,SAAAC,G,IACrBC,EAAWD,EAAXC,YACAC,EAAKF,EAALE,MACAC,EAAYH,EAAZG,aACAC,EAAYJ,EAAZI,aACAC,EAASL,EAATK,UAEA,MAAO,uEAC4CpB,OAjCvC,mCAkC4BA,OADWgB,EAAY,kDAGzBhB,OAFEiB,EAAM,6FAGTjB,OADCoB,EAAU,iDAEXpB,OADAkB,EAAa,iDACAlB,OAAbmB,EAAa,wC,IAGjDE,KAAK,IAER/B,EAAcgC,UAAYT,C,CAK5B,SAASU,EAAWC,EAAUC,GAE5B,IAAIC,EAAiB,GAEjBC,EAAgBH,EAAW,EAC3BI,EAAeJ,EAAW,EAC1BK,EAAeL,EAAW,EAC9BrC,EAAgBqC,EAEZA,EAAW,IACbE,GAAmB,qCACnBA,GAAmB,+BAGjBF,EAAW,IACbE,GAAmB,6BAGjBF,EAAW,IACbE,GAAkB,wBAAuC1B,OAhBtCwB,EAAW,EAgB2B,UAGvDA,EAAW,IACbE,GAAkB,OAAqB1B,OAAd2B,EAAc,UAGzCD,GAAkB,sBAA+B1B,OAATwB,EAAS,SAE7CC,EAAW,EAAID,IACjBE,GAAkB,QAAqB1B,OAAb4B,EAAa,UAGrCH,EAAW,EAAID,IACjBE,GAAkB,QAAqB1B,OAAb6B,EAAa,UAGrCJ,EAAW,EAAID,IACjBE,GAAmB,6BAGjBD,EAAWD,IACbE,GAAkB,uBAAgC1B,OAATyB,EAAS,SAClDC,GAAmB,qCAGrBjC,EAAkB6B,UAAYI,C,CA1EhChC,IAAoBO,MAAK,SAAA6B,GACvBnB,EAAamB,EAAKC,SAClBR,EAAWO,EAAKnC,KAAMmC,EAAKE,Y,IAyB7BvC,EAAkBwC,iBAAiB,SAkDnC,SAA2BC,GAGzB,GADAzB,QAAQC,IAAIwB,EAAIC,QACY,OAAxBD,EAAIC,OAAOC,SACb,OAGF,GAA+B,QAA3BF,EAAIC,OAAOE,YACb,OAG6B,OAA3BH,EAAIC,OAAOE,aACV3C,EAAeP,GAAiB,GAAGc,MAAK,SAAA6B,GACzCnB,EAAamB,EAAKC,SAClBR,EAAWO,EAAKnC,KAAMmC,EAAKE,Y,IAIA,OAA3BE,EAAIC,OAAOE,aACb3C,EAAkBP,GAAiB,GAAGc,MAAK,SAAA6B,GACzCnB,EAAamB,EAAKC,SAClBR,EAAWO,EAAKnC,KAAMmC,EAAKE,Y,IAM/BtC,EAFmBwC,EAAIC,OAAOE,aAEApC,MAAK,SAAA6B,GACjCnB,EAAamB,EAAKC,SAClBR,EAAWO,EAAKnC,KAAMmC,EAAKE,Y","sources":["src/index.js"],"sourcesContent":["const API_KEY = '0b11624b950ea9c4284f61844023b09c';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst movieListElem = document.querySelector('.js-film__list');\nconst paginationBoxElem = document.querySelector('.js-pagination');\n\nlet currPageGlobe;\n\nfunction getTrendingMovies(page = 1) {\n  return trendingMovies = fetch(`${BASE_URL}/movie/week?api_key=${API_KEY}&page=${page}`)\n    .then(resp => {\n\n      if (!resp.ok) {\n        throw new Error(resp.statusText);\n      }\n\n      return resp.json();\n    }).catch(err => console.log(err));\n\n}\ngetTrendingMovies().then(data => {\n  createMarkup(data.results);\n  pagination(data.page, data.total_pages);\n});\n\nfunction createMarkup(arr) {\n  const markup = arr.map(({\n    poster_path,\n    title,\n    release_date,\n    vote_average,\n    genre_ids\n  }) => {\n    return `<li class=\"film__item\">\n          <img class=\"film__item-img\" src=\"${IMG_URL}${poster_path}\">\n          <h2 class=\"film__item-headline\">${title}</h2>\n          <div class=\"film__list-inner\">\n            <p class=\"film__item-genre\">${genre_ids}</p>\n            <p class=\"film__item-year\">${release_date}</p>\n            <p class=\"film__item-rate\">${vote_average}</p>\n          </div>\n        </li>`\n  }).join('');\n\n  movieListElem.innerHTML = markup;\n}\n\npaginationBoxElem.addEventListener(\"click\", paginationHandler);\n\nfunction pagination(currPage, allPages) {\n\n  let markupControls = '';\n  let beforeTwoPages = currPage - 2;\n  let beforeOnePage = currPage - 1;\n  let afterOnePage = currPage + 1;\n  let afterTwoPage = currPage + 2;\n  currPageGlobe = currPage;\n\n  if (currPage > 1) {\n    markupControls += `<li class=' arrows'>&#129144;</li>`;\n    markupControls += `<li class=\"firstInt\">1</li>`;\n  }\n\n  if (currPage > 4) {\n    markupControls += `<li class=\"dots\">...</li>`;\n  }\n\n  if (currPage > 3) {\n    markupControls += `<li class=\"two-left\">${beforeTwoPages}</li>`;\n  }\n\n  if (currPage > 2) {\n    markupControls += `<li>${beforeOnePage}</li>`;\n  }\n\n  markupControls += `<li class='active'>${currPage}</li>`;\n\n  if (allPages - 1 > currPage) {\n    markupControls += `<li >${afterOnePage}</li>`;\n  }\n\n  if (allPages - 2 > currPage) {\n    markupControls += `<li >${afterTwoPage}</li>`;\n  }\n\n  if (allPages - 3 > currPage) {\n    markupControls += `<li class=\"dots\">...</li>`;\n  }\n\n  if (allPages > currPage) {\n    markupControls += `<li class=\"lastInt\">${allPages}</li>`;\n    markupControls += `<li class=' arrows'>&#129146</li>`;\n  }\n\n  paginationBoxElem.innerHTML = markupControls;\n}\n\nfunction paginationHandler(evt) {\n\n  console.log(evt.target);\n  if (evt.target.nodeName !== 'LI') {\n    return;\n  }\n\n  if (evt.target.textContent === \"...\") {\n    return;\n  }\n\n  if (evt.target.textContent === \"ðŸ¡¸\") {\n    getTrendingMovies(currPageGlobe -= 1).then(data => {\n      createMarkup(data.results);\n      pagination(data.page, data.total_pages);\n    })\n  }\n\n  if (evt.target.textContent === \"ðŸ¡º\") {\n    getTrendingMovies(currPageGlobe += 1).then(data => {\n      createMarkup(data.results);\n      pagination(data.page, data.total_pages);\n    })\n  }\n\n  const actualPage = evt.target.textContent;\n\n  getTrendingMovies(actualPage).then(data => {\n    createMarkup(data.results);\n    pagination(data.page, data.total_pages);\n  })\n\n}"],"names":["$b8f9b7833fa37166$var$currPageGlobe","$b8f9b7833fa37166$var$API_KEY","$b8f9b7833fa37166$var$BASE_URL","$b8f9b7833fa37166$var$movieListElem","document","querySelector","$b8f9b7833fa37166$var$paginationBoxElem","$b8f9b7833fa37166$var$getTrendingMovies","page","arguments","length","trendingMovies","fetch","concat","then","resp","ok","Error","statusText","json","catch","err","console","log","$b8f9b7833fa37166$var$createMarkup","arr","markup","map","param","poster_path","title","release_date","vote_average","genre_ids","join","innerHTML","$b8f9b7833fa37166$var$pagination","currPage","allPages","markupControls","beforeOnePage","afterOnePage","afterTwoPage","data","results","total_pages","addEventListener","evt","target","nodeName","textContent"],"version":3,"file":"index.7143e555.js.map"}