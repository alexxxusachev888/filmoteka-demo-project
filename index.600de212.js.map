{"mappings":"AAAA,MAIMA,EAAgBC,SAASC,cAAc,kBACvCC,EAAoBF,SAASC,cAAc,kBAEjD,IAAIE,EAEJ,SAASC,EAAkBC,EAAO,GAChC,OAAOC,eAAiBC,MAAM,kGAAkDF,KAC7EG,MAAKC,IAEJ,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,YAGvB,OAAOH,EAAKI,MAAM,IACjBC,OAAMC,GAAOC,QAAQC,IAAIF,I,CAQhC,SAASG,EAAaC,GACpB,MAAMC,EAASD,EAAIE,KAAI,EAACC,YACtBA,EAAWC,MACXA,EAAKC,aACLA,EAAYC,aACZA,EAAYC,UACZA,KAEO,sGAC4CJ,kDACXC,6FAEFG,iDACDF,iDACAC,2CAGpCE,KAAK,IAER5B,EAAc6B,UAAYR,C,CAK5B,SAASS,EAAWC,EAAUC,GAE5B,IAAIC,EAAiB,GAKrB7B,EAAgB2B,EAEZA,EAAW,IACbE,GAAkB,qCAClBA,GAAkB,+BAGhBF,EAAW,IACbE,GAAkB,6BAGhBF,EAAW,IACbE,GAAkB,wBAhBCF,EAAW,UAmB5BA,EAAW,IACbE,GAAkB,OAnBAF,EAAW,UAsB/BE,GAAkB,sBAAsBF,SAEpCC,EAAW,EAAID,IACjBE,GAAkB,QAxBDF,EAAW,UA2B1BC,EAAW,EAAID,IACjBE,GAAkB,QA3BDF,EAAW,UA8B1BC,EAAW,EAAID,IACjBE,GAAkB,6BAGhBD,EAAWD,IACbE,GAAkB,uBAAuBD,SACzCC,GAAkB,qCAGpB9B,EAAkB0B,UAAYI,C,CA1EhC5B,IAAoBI,MAAKyB,IACvBf,EAAae,EAAKC,SAClBL,EAAWI,EAAK5B,KAAM4B,EAAKE,YAAY,IAyBzCjC,EAAkBkC,iBAAiB,SAkDnC,SAA2BC,GAGzB,GADArB,QAAQC,IAAIoB,EAAIC,QACY,OAAxBD,EAAIC,OAAOC,SACb,OAGF,GAA+B,QAA3BF,EAAIC,OAAOE,YACb,OAG6B,OAA3BH,EAAIC,OAAOE,aACVpC,EAAeD,GAAiB,GAAGK,MAAKyB,IACzCf,EAAae,EAAKC,SAClBL,EAAWI,EAAK5B,KAAM4B,EAAKE,YAAY,IAIZ,OAA3BE,EAAIC,OAAOE,aACbpC,EAAkBD,GAAiB,GAAGK,MAAKyB,IACzCf,EAAae,EAAKC,SAClBL,EAAWI,EAAK5B,KAAM4B,EAAKE,YAAY,IAM3C/B,EAFmBiC,EAAIC,OAAOE,aAEAhC,MAAKyB,IACjCf,EAAae,EAAKC,SAClBL,EAAWI,EAAK5B,KAAM4B,EAAKE,YAAY,G","sources":["src/index.js"],"sourcesContent":["const API_KEY = '0b11624b950ea9c4284f61844023b09c';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst movieListElem = document.querySelector('.js-film__list');\nconst paginationBoxElem = document.querySelector('.js-pagination');\n\nlet currPageGlobe;\n\nfunction getTrendingMovies(page = 1) {\n  return trendingMovies = fetch(`${BASE_URL}/movie/week?api_key=${API_KEY}&page=${page}`)\n    .then(resp => {\n\n      if (!resp.ok) {\n        throw new Error(resp.statusText);\n      }\n\n      return resp.json();\n    }).catch(err => console.log(err));\n\n}\ngetTrendingMovies().then(data => {\n  createMarkup(data.results);\n  pagination(data.page, data.total_pages);\n});\n\nfunction createMarkup(arr) {\n  const markup = arr.map(({\n    poster_path,\n    title,\n    release_date,\n    vote_average,\n    genre_ids\n  }) => {\n    return `<li class=\"film__item\">\n          <img class=\"film__item-img\" src=\"${IMG_URL}${poster_path}\">\n          <h2 class=\"film__item-headline\">${title}</h2>\n          <div class=\"film__list-inner\">\n            <p class=\"film__item-genre\">${genre_ids}</p>\n            <p class=\"film__item-year\">${release_date}</p>\n            <p class=\"film__item-rate\">${vote_average}</p>\n          </div>\n        </li>`\n  }).join('');\n\n  movieListElem.innerHTML = markup;\n}\n\npaginationBoxElem.addEventListener(\"click\", paginationHandler);\n\nfunction pagination(currPage, allPages) {\n\n  let markupControls = '';\n  let beforeTwoPages = currPage - 2;\n  let beforeOnePage = currPage - 1;\n  let afterOnePage = currPage + 1;\n  let afterTwoPage = currPage + 2;\n  currPageGlobe = currPage;\n\n  if (currPage > 1) {\n    markupControls += `<li class=' arrows'>&#129144;</li>`;\n    markupControls += `<li class=\"firstInt\">1</li>`;\n  }\n\n  if (currPage > 4) {\n    markupControls += `<li class=\"dots\">...</li>`;\n  }\n\n  if (currPage > 3) {\n    markupControls += `<li class=\"two-left\">${beforeTwoPages}</li>`;\n  }\n\n  if (currPage > 2) {\n    markupControls += `<li>${beforeOnePage}</li>`;\n  }\n\n  markupControls += `<li class='active'>${currPage}</li>`;\n\n  if (allPages - 1 > currPage) {\n    markupControls += `<li >${afterOnePage}</li>`;\n  }\n\n  if (allPages - 2 > currPage) {\n    markupControls += `<li >${afterTwoPage}</li>`;\n  }\n\n  if (allPages - 3 > currPage) {\n    markupControls += `<li class=\"dots\">...</li>`;\n  }\n\n  if (allPages > currPage) {\n    markupControls += `<li class=\"lastInt\">${allPages}</li>`;\n    markupControls += `<li class=' arrows'>&#129146</li>`;\n  }\n\n  paginationBoxElem.innerHTML = markupControls;\n}\n\nfunction paginationHandler(evt) {\n\n  console.log(evt.target);\n  if (evt.target.nodeName !== 'LI') {\n    return;\n  }\n\n  if (evt.target.textContent === \"...\") {\n    return;\n  }\n\n  if (evt.target.textContent === \"ðŸ¡¸\") {\n    getTrendingMovies(currPageGlobe -= 1).then(data => {\n      createMarkup(data.results);\n      pagination(data.page, data.total_pages);\n    })\n  }\n\n  if (evt.target.textContent === \"ðŸ¡º\") {\n    getTrendingMovies(currPageGlobe += 1).then(data => {\n      createMarkup(data.results);\n      pagination(data.page, data.total_pages);\n    })\n  }\n\n  const actualPage = evt.target.textContent;\n\n  getTrendingMovies(actualPage).then(data => {\n    createMarkup(data.results);\n    pagination(data.page, data.total_pages);\n  })\n\n}"],"names":["$1f0dc3b9307be026$var$movieListElem","document","querySelector","$1f0dc3b9307be026$var$paginationBoxElem","$1f0dc3b9307be026$var$currPageGlobe","$1f0dc3b9307be026$var$getTrendingMovies","page","trendingMovies","fetch","then","resp","ok","Error","statusText","json","catch","err","console","log","$1f0dc3b9307be026$var$createMarkup","arr","markup","map","poster_path","title","release_date","vote_average","genre_ids","join","innerHTML","$1f0dc3b9307be026$var$pagination","currPage","allPages","markupControls","data","results","total_pages","addEventListener","evt","target","nodeName","textContent"],"version":3,"file":"index.600de212.js.map"}